#!/usr/bin/sh

#=====================================================================
# This script implies that the sources needed to build
# the GCC toolchain are already downloaded and untarred. You
# should build the dependencies to make the cross compiler with
# your system compiler.
#=====================================================================

# Terminology:
# prefix: the toplevel installation directory
# sysroot: tells gcc "dir" will be the root in the filesystem of the target operating system. seems to be used for the second pass compiler that will run on the target system.
# host: the system where you want to run the resulting compiler (normally the build machine)
# build: the system which you are using
# target: the system for which you want the compiler to generate code

SOURCES_DIR=/root
HOST_TRIPLET=x86_64-spider-linux-gnu

JOBS="-j$(nproc)" # total number of cores

# Wrapper around the usual fd and cd we used to do
get_source_path(){ echo $(find "$SOURCES_DIR" -maxdepth 1 -name "$1*" -type d) ;}
goto_sources(){ cd "$(get_source_path "$1")" ;}

make_build_dir(){
    if [[ -d "build" ]]; then
        sudo rm -rf build
        mkdir -p build
        cd build
    else
        mkdir -p build
        cd build
    fi
}

# Only really useful for gcc but DRY (https://en.wikipedia.org/wiki/Don%27t_repeat_yourself)
create_gcc_dep_dirs(){
    sudo rm -rf mpfr gmp mpc 2>/dev/null
    tar -xf ../mpfr-4.1.0.tar.xz && mv -v mpfr-4.1.0 mpfr
    tar -xf ../gmp-6.2.1.tar.xz && mv -v gmp-6.2.1 gmp
    tar -xf ../mpc-1.2.1.tar.gz && mv -v mpc-1.2.1 mpc
}

#===============================================================================================

# libstdc++ 2

goto_sources gcc

ln -s gthr-posix.h libgcc/gthr-default.h

create_gcc_dep_dirs

make_build_dir

../libstdc++-v3/configure            \
    CXXFLAGS="-g -O2 -D_GNU_SOURCE"  \
    --prefix=/usr                    \
    --disable-multilib               \
    --disable-nls                    \
    --host=$HOST_TRIPLET \
    --disable-libstdcxx-pch

make $JOBS
make install $JOBS
